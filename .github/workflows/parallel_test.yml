# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Parallel Test

on:
  workflow_dispatch:


permissions:
  contents: read

jobs:
  build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirement.txt
    - name: Install Node.js and npm
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Install allure-commandline
      run: npm install -g allure-commandline
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: pytest -n auto --dist loadfile  --html=reports/basic-report.html  --alluredir=reports ./tests
    - name: Generate Allure report
      if: success() || failure()
      run: allure generate reports  -o reports_allure
    - name: Upload Test Report as Zip File
      uses: actions/upload-artifact@v3
      if: success() || failure()
      with:
        name: test-report
        path: |
          reports_allure
          reports
    - name: Clone destination repository
      if: success() || failure()
      run: |
        git clone https://github.com/trang63/allure_report.git destination-repo
    - name: Copy Allure Report to Destination Repository
      if: success() || failure()
      run: |
        current_date=$(date +%Y-%m-%d)
        current_time=$(date +%H-%M-%S)
        folder_name="report_${current_date}_${current_time}"
        mkdir "destination-repo/$folder_name"
        cp -R ./reports_allure/* "destination-repo/$folder_name"
    - name: Commit and Push Changes to Destination Repository
      if: success() || failure()
      run: |
        cd destination-repo
        git config --global user.name "trang63"
        git config --global user.email "thantrang0603@gmail.com"
        git add .
        git commit -m "Upload Allure Report"
        git push https://${{ secrets.ACCESS_KEY }}@github.com/trang63/allure_report.git
